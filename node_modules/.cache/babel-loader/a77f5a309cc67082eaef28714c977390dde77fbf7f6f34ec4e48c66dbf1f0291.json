{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\Documents\\\\code\\\\robofriends\\\\robofriends\\\\src\\\\CardList.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = function ({\n  robots\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: robots.map((user, i) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: robots[i].id,\n        name: robots[i].name,\n        email: robots[i].email\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n// 2nd way to do this with a for...of loop()\n\n// const CardList = function({ robots }) {\n//     const CL = [];\n//     for (let user of robots) \n//         CL.push(<Card key={robots.indexOf(user)} id={user.id} name={user.name} email={user.email}/>)\n//     return (\n//         <div>\n//             {CL}\n//         </div>\n//     );\n// };\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","CardList","robots","children","map","user","i","id","name","email","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/Documents/code/robofriends/robofriends/src/CardList.js"],"sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = function({ robots }) {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n// 2nd way to do this with a for...of loop()\r\n\r\n// const CardList = function({ robots }) {\r\n//     const CL = [];\r\n//     for (let user of robots) \r\n//         CL.push(<Card key={robots.indexOf(user)} id={user.id} name={user.name} email={user.email}/>)\r\n//     return (\r\n//         <div>\r\n//             {CL}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default CardList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG,SAAAA,CAAS;EAAEC;AAAO,CAAC,EAAE;EAClC,oBACIF,OAAA;IAAAG,QAAA,EAEQD,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MACpB,oBACAN,OAAA,CAACF,IAAI;QAEDS,EAAE,EAAEL,MAAM,CAACI,CAAC,CAAC,CAACC,EAAG;QACjBC,IAAI,EAAEN,MAAM,CAACI,CAAC,CAAC,CAACE,IAAK;QACrBC,KAAK,EAAEP,MAAM,CAACI,CAAC,CAAC,CAACG;MAAM,GAHlBH,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GA9BMb,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}