{"ast":null,"code":"var _jsxFileName = \"/home/cristian/code/projects/robofriends/src/SWGallery.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Button;\n;\nfunction InfoList({\n  dict,\n  key\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: dict[key].map(user => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: dict[key].title\n      }, dict[key].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c2 = InfoList;\n;\nexport default function SWGallery() {\n  _s();\n  const [key, setKey] = useState(0);\n  const [dict, setDict] = useState({\n    a: 1,\n    b: 2\n  });\n  fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(json => setDict({\n    ...json\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px solid gray\",\n      borderRadius: \"25px\",\n      padding: \"20px\",\n      width: \"200px\",\n      height: \"150px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(InfoList, {\n      dict: dict\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => {\n        setKey(Math.floor(Math.random() * 100));\n      },\n      children: \"Choose Random user to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(SWGallery, \"+wt2Z7zFT3jTIAUSwPmLeWbmdt4=\");\n_c3 = SWGallery;\n;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"InfoList\");\n$RefreshReg$(_c3, \"SWGallery\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Button","props","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","InfoList","dict","key","map","user","title","id","_c2","SWGallery","_s","setKey","setDict","a","b","fetch","then","response","json","style","border","borderRadius","padding","width","height","e","Math","floor","random","_c3","$RefreshReg$"],"sources":["/home/cristian/code/projects/robofriends/src/SWGallery.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction Button(props) {\n    return (\n        <button onClick={props.onClick}>\n            {props.children}\n        </button>\n    )\n};\n\nfunction InfoList({dict, key}) {\n    return (\n        <ul>\n            {dict[key].map(user => {\n                return <li key={dict[key].id}>{dict[key].title}</li>\n            })}\n        </ul>\n    )\n};\n\nexport default function SWGallery() {\n    const [key, setKey] = useState(0)\n    const [dict, setDict] = useState({a: 1, b: 2})\n\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(json => setDict({...json}))\n\n\n    return (\n        <div style={{border: \"2px solid gray\", borderRadius: \"25px\", padding: \"20px\", width: \"200px\", height: \"150px\"}}>\n            <InfoList dict={dict} key={key} />\n            <Button onClick={(e) => {\n                setKey(Math.floor(Math.random() * 100));\n            }}>\n                Choose Random user to display\n            </Button>\n        </div>\n    )\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,MAAMA,CAACC,KAAK,EAAE;EACnB,oBACIF,OAAA;IAAQG,OAAO,EAAED,KAAK,CAACC,OAAQ;IAAAC,QAAA,EAC1BF,KAAK,CAACE;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEjB;AAACC,EAAA,GANQR,MAAM;AAMd;AAED,SAASS,QAAQA,CAAC;EAACC,IAAI;EAAEC;AAAG,CAAC,EAAE;EAC3B,oBACIZ,OAAA;IAAAI,QAAA,EACKO,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,CAACC,IAAI,IAAI;MACnB,oBAAOd,OAAA;QAAAI,QAAA,EAAwBO,IAAI,CAACC,GAAG,CAAC,CAACG;MAAK,GAA9BJ,IAAI,CAACC,GAAG,CAAC,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CAAC;IACxD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACS,GAAA,GARQP,QAAQ;AAQhB;AAED,eAAe,SAASQ,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACP,GAAG,EAAEQ,MAAM,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,IAAI,EAAEU,OAAO,CAAC,GAAGvB,QAAQ,CAAC;IAACwB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAC,CAAC,CAAC;EAE9CC,KAAK,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACE,IAAI,IAAIN,OAAO,CAAC;IAAC,GAAGM;EAAI,CAAC,CAAC,CAAC;EAGtH,oBACI3B,OAAA;IAAK4B,KAAK,EAAE;MAACC,MAAM,EAAE,gBAAgB;MAAEC,YAAY,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAA7B,QAAA,gBAC3GJ,OAAA,CAACU,QAAQ;MAACC,IAAI,EAAEA;IAAK,GAAMC,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClCR,OAAA,CAACC,MAAM;MAACE,OAAO,EAAG+B,CAAC,IAAK;QACpBd,MAAM,CAACe,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MAC3C,CAAE;MAAAjC,QAAA,EAAC;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACW,EAAA,CAjBuBD,SAAS;AAAAoB,GAAA,GAATpB,SAAS;AAiBhC;AAAC,IAAAT,EAAA,EAAAQ,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}