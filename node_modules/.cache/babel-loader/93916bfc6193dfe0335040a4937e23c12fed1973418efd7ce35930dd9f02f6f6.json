{"ast":null,"code":"var _jsxFileName = \"/home/cristian/code/projects/robofriends/src/CardList.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardList = function ({\n  robots,\n  inputValue,\n  setInputValue\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: robots.filter((robot, i) => robot.name.toLowerCase().includes(inputValue.toLowerCase())).map(robot => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: robot.id,\n        name: robot.name,\n        email: robot.email\n      }, robot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n// 2nd way to do this with a for...of loop()\n\n// const CardList = function({ robots }) {\n//     const CL = [];\n//     for (let user of robots) \n//         CL.push(<Card key={robots.indexOf(user)} id={user.id} name={user.name} email={user.email}/>)\n//     return (\n//         <div>\n//             {CL}\n//         </div>\n//     );\n// };\n_c = CardList;\nexport default CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","CardList","robots","inputValue","setInputValue","children","filter","robot","i","name","toLowerCase","includes","map","id","email","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cristian/code/projects/robofriends/src/CardList.js"],"sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList = function({ robots, inputValue, setInputValue }) {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.filter((robot, i) => robot.name.toLowerCase().includes(inputValue.toLowerCase()))\r\n                      .map((robot) => {\r\n                    return (\r\n                    <Card \r\n                        key={robot.id} \r\n                        id={robot.id} \r\n                        name={robot.name} \r\n                        email={robot.email}\r\n                    />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n// 2nd way to do this with a for...of loop()\r\n\r\n// const CardList = function({ robots }) {\r\n//     const CL = [];\r\n//     for (let user of robots) \r\n//         CL.push(<Card key={robots.indexOf(user)} id={user.id} name={user.name} email={user.email}/>)\r\n//     return (\r\n//         <div>\r\n//             {CL}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default CardList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,QAAQ,GAAG,SAAAA,CAAS;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAC7D,oBACIJ,OAAA;IAAAK,QAAA,EAEQH,MAAM,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAKD,KAAK,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,UAAU,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC,CACjFE,GAAG,CAAEL,KAAK,IAAK;MAClB,oBACAP,OAAA,CAACF,IAAI;QAEDe,EAAE,EAAEN,KAAK,CAACM,EAAG;QACbJ,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBK,KAAK,EAAEP,KAAK,CAACO;MAAM,GAHdP,KAAK,CAACM,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GA/BMlB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}